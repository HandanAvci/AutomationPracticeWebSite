<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-1RMVF318" ignored="0" name="Default test(failed)(failed)(failed)" tests="14" failures="1" timestamp="04 Feb 2020 17:47:32 GMT" time="3.873" errors="0">
  <testcase name="@BeforeTest setup" time="0.015" classname="com.automationpractice.testng.ParameterByDataProvider">
    <failure type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;LAPTOP-1RMVF318&amp;apos;, ip: &amp;apos;192.168.86.22&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_221&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-1RMVF318', ip: '192.168.86.22', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:100)
at java.util.Optional.orElseGet(Optional.java:267)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:216)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:187)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at com.automationpractice.testng.ParameterByDataProvider.setup(ParameterByDataProvider.java:24)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest setup -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.report.ExtentReport">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="com.report.ExtentReport">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@AfterTest teardown" time="0.0" classname="com.automationpractice.AutomationPractice">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest sfterSuite" time="0.0" classname="com.report.ExtentReport">
    <skipped/>
  </testcase> <!-- @AfterTest sfterSuite -->
  <testcase name="@AfterTest closeBrowser" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase name="login" time="0.0" classname="com.automationpractice.AutomationPractice">
    <skipped/>
  </testcase> <!-- login -->
  <testcase name="product" time="0.0" classname="com.automationpractice.AutomationPractice">
    <skipped/>
  </testcase> <!-- product -->
  <testcase name="addTocart" time="0.0" classname="com.automationpractice.AutomationPractice">
    <skipped/>
  </testcase> <!-- addTocart -->
  <testcase name="termsOfService" time="0.0" classname="com.automationpractice.AutomationPractice">
    <skipped/>
  </testcase> <!-- termsOfService -->
  <testcase name="checkOut" time="0.0" classname="com.automationpractice.AutomationPractice">
    <skipped/>
  </testcase> <!-- checkOut -->
  <testcase name="testMethodB" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- testMethodB -->
  <testcase name="testMethodB" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- testMethodB -->
  <testcase name="testMethodB" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- testMethodB -->
  <testcase name="testMethodA" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- testMethodA -->
  <testcase name="testMethodA" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- testMethodA -->
  <testcase name="testMethodA" time="0.0" classname="com.automationpractice.testng.ParameterByDataProvider">
    <skipped/>
  </testcase> <!-- testMethodA -->
  <testcase name="getbrowser" time="0.0" classname="com.automationpractice.testng.ParameterTesting">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by @Test on method getbrowser but has not been marked @Optional or defined
in C:\Users\nefer\git\teamTwoAuto\AutomationPractice\test-output\Failed suite [Failed suite [Default suite]]\testng-failed.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by @Test on method getbrowser but has not been marked @Optional or defined
in C:\Users\nefer\git\teamTwoAuto\AutomationPractice\test-output\Failed suite [Failed suite [Default suite]]\testng-failed.xml
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- getbrowser -->
  <testcase name="setupMethod" time="0.0" classname="com.automationpractice.testng.DependsOnMethod">
    <skipped/>
  </testcase> <!-- setupMethod -->
  <testcase name="method2" time="0.0" classname="com.automationpractice.testng.DependsOnMethod">
    <skipped/>
  </testcase> <!-- method2 -->
</testsuite> <!-- Default test(failed)(failed)(failed) -->
